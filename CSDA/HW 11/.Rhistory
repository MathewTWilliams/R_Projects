labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = TRUE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 10000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
n_samples = 3000
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/21/2022
### Part 1
trials <- 10000
n_drawn <- 2
successes <- 0
Balls <- c("R", "R", "R", "R", "W", "W", "W")
check_1 <- c("R","R")
for(i in 1:trials) {
s <- sample(Balls, size = n_drawn, replace = FALSE)
if(identical(s, check_1)) {
successes <- successes + 1
}
}
p = successes / trials
p
### Part 2
trials <- 10000
successes <- 0
satisfy_cond <- 0
Balls <- c("R", "R", "R", "R", "W", "W", "W")
check_2 <- c("R")
for(i in 1:trials) {
s1 <- sample(Balls, size = 1, replace = FALSE)
if(identical(s1, check_2)) {
satisfy_cond <- satisfy_cond + 1
n_balls <- c("R", "R", "R", "W", "W", "W")
s2 <- sample(n_balls, size = 1, replace = FALSE)
if(identical(s2, check_2)) {
successes <- successes + 1
}
}
}
p <- successes / satisfy_cond
p
pnorm(72, 78, 36, lower.tail = FALSE)
data <- read.csv("NutritionStudy.csv", header = TRUE)
data
setwd("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 11")
data <- read.csv("NutritionStudy.csv", header = TRUE)
data
# Author: Matt Williams
# Version: 4/24/2022
data <- read.csv("NutritionStudy.csv", header = TRUE)
attach(data)
model = lm(Cholesterol ~ Fat)
summary(model)
plot(Fat, Cholesterol)
lines(Fat, fitted(model))
hist(resid(model))
plot(fitted(model), resid(model))
abline(0,0)
data <- read.csv("LightatNight4Week.csv", header = TRUE)
data
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
data
model = lm(BMGain ~ Corticosterone, DayPct, Consumption, Activity)
summary(model)
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
data
attach(data)
model = lm(BMGain ~ Corticosterone, DayPct, Consumption, Activity)
summary(model)
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
attach(data)
model = lm(BMGain ~ Corticosterone, DayPct, Consumption, Activity)
summary(model)
model = lm(BMGain ~ Corticosterone + DayPct + Consumption + Activity)
summary(model)
plot(fitted(model), resid(model))
abline(0,0)
plot(Corticosterone, BMGain)
lines(Corticosterone, fitted(model))
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
# Author: Matt Williams
# Version: 4/24/2022
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
attach(data)
model = lm(BMGain ~ Corticosterone)
summary(model)
plot(Corticosterone, BMGain)
lines(Corticosterone, fitted(model))
plot(fitted(model), resid(model))
abline(0,0)
# Author: Matt Williams
# Version: 4/24/2022
data <- read.csv("LightatNight4Weeks.csv", header = TRUE)
attach(data)
model = lm(BMGain ~ Corticosterone)
summary(model)
plot(Corticosterone, BMGain)
lines(Corticosterone, fitted(model))
hist(resid(model))
plot(fitted(model), resid(model))
abline(0,0)
model = lm(BMGain ~ DayPct)
summary(model)
plot(DayPct, BMGain)
lines(DayPct, fitted(model))
hist(resid(model))
plot(fitted(model), resid(model))
abline(0,0)
model = lm(BMGain ~ Consumption)
summary(model)
plot(Consumption, BMGain)
lines(Consumption, fitted(model))
hist(resid(model))
plot(fitted(model), resid(model))
abline(0,0)
### multi-regression model
model = lm(BMGain ~ Corticosterone + DayPct + Consumption + Activity)
summary(model)
model = lm(BMGain ~ Activity)
summary(model)
plot(Activity, BMGain)
lines(Activity, fitted(model))
hist(resid(model))
plot(fitted(model), resid(model))
abline(0,0)
data <- read.csv("FloridaLakes.csv", header = TRUE)
data
data <- read.csv("FloridaLakes.csv", header = TRUE)
attach(data)
model = lm(AvgMercury ~ Alkalinity + pH + Calcium + Chlorophyll)
summary(model)
anova(model)
model = lm(AvgMercury ~ Alkalinity + pH + Calcium + Chlorophyll)
summary(model)
model_2 = lm(AvgMercury ~ Alkalinity  + Calcium + Chlorophyll)
summary(model_2)
model_2 = lm(AvgMercury ~ Alkalinity  + Calcium + Chlorophyll)
summary(model_2)
model_3 = lm(AvgMercury ~ Alkalinity + Chlorophyll)
summary(model_3)
anova(model_2, model_1)
model_1 = lm(AvgMercury ~ Alkalinity + pH + Calcium + Chlorophyll)
summary(model)
model_2 = lm(AvgMercury ~ Alkalinity  + Calcium + Chlorophyll)
summary(model_2)
model_3 = lm(AvgMercury ~ Alkalinity + Chlorophyll)
summary(model_3)
anova(model_2, model_1)
anova(model_3, model_1)
anova(model_3, model_2)
anova(model_2, model_3)
data <- read.csv("NutritionStudy.csv", header = TRUE)
data
source("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 11/Q10_85.R")
attach(data)
attach(data)
model_1 = lm(BetaPlasma ~ Age)
summary(model_1)
plot(Age, BetaPlasma)
lines(Age, fitted(model_1))
hist(resid(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
plot(Age, BetaPlasma)
lines(Age, fitted(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
model_1 = lm(BetaPlasma ~ Fat)
summary(model_1)
plot(Fat, BetaPlasma)
lines(Fat, fitted(model_1))
hist(resid(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
model_1 = lm(BetaPlasma ~ Fiber)
summary(model_1)
plot(Fiber, BetaPlasma)
lines(Fiber, fitted(model_1))
hist(resid(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
### Alcohol ###
model_1 = lm(BetaPlasma ~ Alcohol)
summary(model_1)
plot(Alcohol, BetaPlasma)
lines(Alcohol, fitted(model_1))
hist(resid(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
model_1 = lm(BetaPlasma ~ BetaDiet)
summary(model_1)
plot(BetaDiet, BetaPlasma)
lines(BetaDiet, fitted(model_1))
hist(resid(model_1))
plot(fitted(model_1), resid(model_1))
abline(0,0)
model_1 = lm (BetaPlasma ~ Age + Fat + Fiber + Alcohol + BetaDiet)
summary(model_1)
model_2 = lm (BetaPlasma ~ Age + Fat + Fiber + BetaDiet)
summary(model_2)
model_3 = lm (BetaPlasma ~ Age + Fiber + BetaDiet)
summary(model_3)
model_4 = lm (BetaPlasma ~  Fiber + BetaDiet)
summary(model_4)
anova(model_2, model_1)
anova(model_3, model_1)
anova(model_3, model_2)
anova(model_4, model_1)
anova(model_4, model_2)
anova(model_4, model_3)
