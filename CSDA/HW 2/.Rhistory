4+5
f=expression(e^(4*x))
x=1
eval(D(f,'x'))
f=expression(exp(1)^(4*x))
x=1
eval(D(f,'x'))
f <- expression(exp(1)^(4*x))
x=1
eval(D(f,'x'))
f <- expression(log(1-(2*x)))
eval(D(f,'x'))
f <- expression(x^3 * exp(4*x))
eval(D(f,'x'))
f <- expression(x^3 * exp(4*x))
x = 1
eval(D(f,'x'))
f <- expression(exp(x) / x^2 + 1)
x = 1
eval(D(f, 'x'))
f <- expression(exp(x) / x^2 + 1)
f <- expression(exp(x) / x^2 + 1)
f
f <- expression(exp(x) / (x^2) + 1)
x = 1
eval(D(f, 'x'))
f <- expression(exp(x) / (x^2) + 1)
x = 2
eval(D(f, 'x'))
f <- expression(exp(x) / (x^2) + 1)
x = 2
eval(D(f, 'x'))
f <- expression(exp(x) / x^2 + 1)
x = 2
eval(D(f, 'x'))
f <- expression(exp(x) / x^2 + 1)
x = 2
ceiling(eval(D(f, 'x')))
f <- expression(exp(x) / x^2+1)
x = 2
eval(D(f, 'x'))
f <- expression(exp('x') / x^2+1)
x = 2
eval(D(f, 'x'))
f <- expression(exp(x) / x^2+1)
x = 2
eval(D(f, 'x'))
f <- expression(exp(x) / (x^2+1))
x = 2
eval(D(f, 'x'))
f <- function(x) 3*x
integrate(f,0,1)
f <- function(x) x / (1 + x^2)
integrate(f,0,1)
f <- function(x) x * exp(x)
integrate(f,0,1)
f <- function(x) x + y
ff <- integrate(f,0,1)
f <- function(y) ff
integrate(f, 0, 2)
f <- function(x) x + y
f <- function(y) integrate(f,0,1)
integrate(f, 0, 2)
library(cubature)
f <- function(x) {x[1] + x[2]}
adaptIntegrate(f, lowerLimit = c(0,0), upperLimit = c(2,1))
library(cubature)
f <- function(x) {(x[1] + x[2])}
adaptIntegrate(f, lowerLimit = c(0,0), upperLimit = c(2,1))
clear
install.packages("cubature")
library(cubature)
f <- function(x) {(x[1] + x[2])}
adaptIntegrate(f, lowerLimit = c(0,0), upperLimit = c(2,1))
library(cubature)
f <- function(x) {x[1] + x[2]}
adaptIntegrate(f, lowerLimit = c(0,0), upperLimit = c(2,1))
setwd("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 2")
data <- read.csv(file="AllCountries.csv", header=TRUE)
hist(data)
data <- read.csv(file="AllCountries.csv", header=TRUE)
hist(data$BirthRate)
data <- read.csv(file="AllCountries.csv", header=TRUE)
hist(data$DeathRate)
