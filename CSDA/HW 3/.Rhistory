else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = length(values), replace = FALSE)
props[i] = mean(sample)
}
boxplot(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = length(values), replace = FALSE)
props[i] = mean(sample)
}
boxplot(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = length(values), replace = FALSE)
props[i] = mean(sample)
}
hist(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = length(values), replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
hist(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = length(values), replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
print(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = n, replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
print(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = n, replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
hist(props)
n_samples <- 1000
n <- 50
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = n, replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
hist(props)
sd(props)
n_samples <- 1000
#n <- 50
n <- 500
n_people = 1000
cut_off = 275
values <- vector("numeric", length = n_people)
props <- vector("numeric", length = n_samples)
for(i in 1:length(values))
{
if(i <= cut_off)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = n, replace = FALSE)
count = 0
for(val in sample){
if(val == TRUE)
{
count = count + 1
}
}
props[i] = count / length(sample)
}
hist(props)
sd(props)
data <- read.csv("CarDepreciation.csv", header = TRUE)
mean(data$Depreciation)
sd(data$Depreciation)
setwd("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 3")
data <- read.csv("CarDepreciation.csv", header = TRUE)
mean(data$Depreciation)
sd(data$Depreciation)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data&Depreciation, size = n, replace = TRUE)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data&Depreciation, size = n, replace = TRUE)
print(sample)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data&Depreciation, size = n, replace = TRUE)
print(sample)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
setwd("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 3")
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data&Depreciation, size = n, replace = TRUE)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data$Depreciation, size = n, replace = TRUE)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
n = 10
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data$Depreciation, size = n, replace = TRUE)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
data <- read.csv("CarDepreciation.csv", header = TRUE)
#mean(data$Depreciation)
#sd(data$Depreciation)
n_samples = 1000
means = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
sample <- sample(data$Depreciation, size = length(data$Depreciation), replace = TRUE)
means[i] = mean(sample)
}
boxplot(means)
sd(means)
# Author: Matt Williams
# Version: 2/6/2022
n_people = 1000
cutoff = 753
n_samples = 10000
values <- vector('numeric', length = n_people)
probs <- vector('numeric', length = n_samples)
p = 0.90
for(i in 1:n_people)
{
if(i <= cutoff)
{
values[i] = TRUE
}
else
{
values[i] = FALSE
}
}
for(i in 1:n_samples)
{
sample <- sample(values, size = n_people, replace = TRUE)
count = 0
for(val in sample)
{
if(val == TRUE)
{
count = count + 1
}
}
probs[i] = count / n_people
}
a <- (1 - p)/2
b = a + p
quantile(probs, c(a,b))
setwd("C:/Main Folder/Git Repositories/R_Projects/CSDA/HW 3")
# Version: 2/6/2022
data <- read.csv("ImmuneTea.csv", header = TRUE)
coffee = c()
tea = c()
for(i in 1:nrow(data))
{
if(data$Drink[i] == "Coffee")
{
coffee = c(coffee, data$InterferonGamma[i])
}
else
{
tea = c(tea, data$InterferonGamma[i])
}
}
tea_mean = mean(tea)
cof_mean = mean(coffee)
print(tea_mean - cof_mean)
# Version: 2/6/2022
data <- read.csv("ImmuneTea.csv", header = TRUE)
coffee = c()
tea = c()
for(i in 1:nrow(data))
{
if(data$Drink[i] == "Coffee")
{
coffee = c(coffee, data$InterferonGamma[i])
}
else
{
tea = c(tea, data$InterferonGamma[i])
}
}
tea_mean = mean(tea)
cof_mean = mean(coffee)
print(tea_mean - cof_mean)
data <- read.csv("ImmuneTea.csv", header = TRUE)
coffee = c()
tea = c()
n_samples = 10000
p = .90
for(i in 1:nrow(data))
{
if(data$Drink[i] == "Coffee")
{
coffee = c(coffee, data$InterferonGamma[i])
}
else
{
tea = c(tea, data$InterferonGamma[i])
}
}
#tea_mean = mean(tea)
#cof_mean = mean(coffee)
#print(tea_mean - cof_mean)
diffs = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
tea_sample = sample(tea, size = length(tea), replace = TRUE)
cof_sample = sample(coffee, size = length(coffee), replace = TRUE)
diffs[i] = mean(tea_sample) - mean(cof_sample)
}
a <- (1 - p) / 2
b = p + a
quantile(diffs, c(a,b))
data <- read.csv("ImmuneTea.csv", header = TRUE)
coffee = c()
tea = c()
n_samples = 10000
#p = .90
p = 0.99
for(i in 1:nrow(data))
{
if(data$Drink[i] == "Coffee")
{
coffee = c(coffee, data$InterferonGamma[i])
}
else
{
tea = c(tea, data$InterferonGamma[i])
}
}
#tea_mean = mean(tea)
#cof_mean = mean(coffee)
#print(tea_mean - cof_mean)
diffs = vector("numeric", length = n_samples)
for(i in 1:n_samples)
{
tea_sample = sample(tea, size = length(tea), replace = TRUE)
cof_sample = sample(coffee, size = length(coffee), replace = TRUE)
diffs[i] = mean(tea_sample) - mean(cof_sample)
}
a <- (1 - p) / 2
b = p + a
quantile(diffs, c(a,b))
n_samples <- 10000
means <- vector("numeric", length = n_samples)
p <- 0.95
data <- read.csv("SampColleges2yr.csv")
for(i in 1:n_samples)
{
sample <- sample(data$Cost, size = length(data$Cost), replace = TRUE)
means[i] = mean(sample)
}
a = (1 - p) / 2
b = a + p
quantile(means,c(a,b))
n_samples <- 10000
means <- vector("numeric", length = n_samples)
p <- 0.90
data <- read.csv("SampColleges2yr.csv")
for(i in 1:n_samples)
{
sample <- sample(data$Cost, size = length(data$Cost), replace = TRUE)
means[i] = mean(sample)
}
a = (1 - p) / 2
b = a + p
quantile(means,c(a,b))
# part b
data <- read.csv("CollegeScores2yr", header = TRUE)
print(mean(data$Cost))
# part b
data <- read.csv("CollegeScores2yr.csv", header = TRUE)
print(mean(data$Cost))
# part b
data <- read.csv("CollegeScores2yr.csv", header = TRUE)
print(mean(data$Cost))
# part b
data <- read.csv("CollegeScores2yr.csv", header = TRUE)
print(mean(data$Cost))
data <- read.csv("CollegeScores2yr.csv", header = TRUE)
print(data$Cost)
# part b
data <- read.csv("CollegeScores2yr.csv", header = TRUE)
print(mean(data$Cost, na.rm = TRUE))
