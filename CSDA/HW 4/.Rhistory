for (i in 1:n_samples) {
s1 <- sample(sample_1, size = sample_size, replace = T)
s2 <- sample(sample_2, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 10000
sample_size = 20
cut_off = 10 #abitrary
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 10000
sample_size = 20
cut_off = 9 #abitrary
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 10000
sample_size = 20
cut_off = 11 #abitrary
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 10000
sample_size = 200
cut_off = 100
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 10000
sample_size = 2000
cut_off = 1000
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) / sample_size) - (sum(s2) / sample_size)
}
p = sum(results >= p_hat) / n_samples
p
(sum(s1) - sum(s2)) / sample_size
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
#Author: Matt Williams
#Version: 2/14/2022
n_samples = 100
sample_size = 20
cut_off = 10
sample = vector(mode="numeric", length = sample_size)
p_hat = 0.15
for(i in 1:sample_size) {
if(i <= cut_off) {
sample[i] = 1
}
else {
sample[i] = 0
}
}
results = vector(mode="numeric", length = n_samples)
for (i in 1:n_samples) {
s1 <- sample(sample, size = sample_size, replace = T)
s2 <- sample(sample, size = sample_size, replace = T)
results[i] <- (sum(s1) - sum(s2)) / sample_size
}
p = sum(results >= p_hat) / n_samples
p
# Author: Matt Williams
# Version: 2/14/2022
data <- read.csv("SleepCaffeine.csv", header = TRUE)
sleep_group <- data[data$Group == "Sleep",]
caff_group <- data[data$Group == "Caffeine",]
p_hat = abs(mean(sleep_group$Words) - mean(caff_group$Words))
n_samples = 10000
results <- vector(mode = "numeric", length = n_samples)
n_data <- data
for(i in 1:n_samples){
s <- sample(n_data$Words, size = nrow(n_data), replace = F)
n_data$Words <- s
s_g <- n_data[n_data$Group == "Sleep",]
c_g <- n_data[n_data$Group == "Caffeine", ]
results[i] = abs(mean(s_g$Words) - mean(c_g$Words))
}
p = sum(results >= p_hat)/n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = (g_quit/n_group) - (i_quit/n_indiv)
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = (sum(group$values) / n_group) - (sum(indiv$values) / n_indiv)
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = abs((g_quit/n_group) - (i_quit/n_indiv))
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = abs((sum(group$values) / n_group) - (sum(indiv$values) / n_indiv))
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
# Author: Matt Williams
# Version: 2/19/2022
n_samples = 3000
# make data frame for smoking group
n_group = 1080
g_quit = 148
n_indiv = 990
i_quit = 120
n_total = n_group + n_indiv
values <- vector("numeric", length = n_total)
labels <- vector ("character", length = n_total)
# fill in vectors
for(i in 1:n_group) {
labels[i] = "Group"
if (i <= g_quit) {
values[i] <- 1
}
else {
values[i] <- 0
}
}
for(i in 1:n_indiv) {
labels[i+n_group] = "Individual"
if (i <= i_quit) {
values[i+n_group] <- 1
}
else {
values[i+n_group] <- 0
}
}
# make data frame
data <- data.frame(values, labels)
stat_star = abs((g_quit/n_group) - (i_quit/n_indiv))
results <- vector("numeric", length = n_samples)
for(i in 1:n_samples){
s <- sample(data$values, size = n_total, replace = FALSE)
data$values = s
group = data[data$labels == "Group", ]
indiv = data[data$labels == "Individual", ]
results[i] = abs((sum(group$values) / n_group) - (sum(indiv$values) / n_indiv))
}
m <- mean(results)
m
s <- sd(results)
s
p <- sum(results >= stat_star) / n_samples
p
